{
    "openapi": "3.0.0",
    "info": {
        "title": "Swagger Tasker",
        "description": "This is a sample Petstore server.  You can find\nout more about Swagger at\n[http://swagger.io](http://swagger.io) or on\n[irc.freenode.net, #swagger](http://swagger.io/irc/).",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "apiteam@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/comments/{id}/attachments": {
            "post": {
                "tags": [
                    "Comment"
                ],
                "summary": "Upload attachment to a comment",
                "operationId": "App\\Http\\Controllers\\AttachmentController::comment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of comment",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "attachment": {
                                        "description": "file to upload",
                                        "type": "string",
                                        "format": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Return success"
                    }
                }
            }
        },
        "/tasks/{slug}/attachments": {
            "post": {
                "tags": [
                    "Task"
                ],
                "summary": "Upload attachment to a task",
                "operationId": "App\\Http\\Controllers\\AttachmentController::task",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of task",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "attachment": {
                                        "description": "file to upload",
                                        "type": "string",
                                        "format": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Return success"
                    }
                }
            }
        },
        "/attachment/{id}": {
            "delete": {
                "tags": [
                    "Task"
                ],
                "summary": "Remove an attachment",
                "operationId": "App\\Http\\Controllers\\AttachmentController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of attachment",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return success"
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "operationId": "addPet",
                "requestBody": {
                    "description": "Register data format",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "User' email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "description": "User's passowrd",
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Register a user successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Log in a new user",
                "operationId": "App\\Http\\Controllers\\Auth\\AuthController::postLogin",
                "requestBody": {
                    "description": "Login data format",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "User' email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "description": "User's passowrd",
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Register a user successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Log out current user",
                "operationId": "App\\Http\\Controllers\\Auth\\AuthController::validateLogin",
                "responses": {
                    "200": {
                        "description": "Register a user successfully"
                    }
                }
            }
        },
        "/tasks/{slug}/bids": {
            "post": {
                "tags": [
                    "Task"
                ],
                "summary": "Create a new bid",
                "operationId": "App\\Http\\Controllers\\BidController::store",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of task",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Create data format",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "comment": {
                                        "description": "Bid's body",
                                        "type": "string",
                                        "example": "This is a bid comment"
                                    },
                                    "price": {
                                        "description": "Bid's price",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": "100"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Createa a comment successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/bids/{id}/approve": {
            "post": {
                "tags": [
                    "Bid"
                ],
                "summary": "Accept a bid",
                "operationId": "App\\Http\\Controllers\\BidController::approve",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of bid",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Createa a comment successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/tasks/{slug}/comments": {
            "post": {
                "tags": [
                    "Task"
                ],
                "summary": "Create a new comment",
                "operationId": "App\\Http\\Controllers\\CommentController::store",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of task",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Create data format",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "body": {
                                        "description": "Comment's body",
                                        "type": "string",
                                        "example": "This is a comments"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Createa a comment successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/comments/{id}/replies": {
            "post": {
                "tags": [
                    "Comment"
                ],
                "summary": "Create a new comment reply",
                "operationId": "App\\Http\\Controllers\\CommentController::reply",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of comment",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Create data format",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "body": {
                                        "description": "Comment's body",
                                        "type": "string",
                                        "example": "This is a comments"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Createa a comment successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/tasks/{task}/ratings": {
            "post": {
                "tags": [
                    "Rating"
                ],
                "summary": "Create a new task rating",
                "operationId": "App\\Http\\Controllers\\RatingController::store",
                "requestBody": {
                    "description": "Create data format",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "rating": {
                                        "description": "Task's rating",
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "body": {
                                        "description": "Task's rating comment",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create a task successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "tags": [
                    "Task"
                ],
                "summary": "Get list of tasks",
                "operationId": "App\\Http\\Controllers\\TaskController::index",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit the return result",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": "50"
                        }
                    },
                    {
                        "name": "min_price",
                        "in": "query",
                        "description": "Min task's price",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": "100"
                        }
                    },
                    {
                        "name": "max_price",
                        "in": "query",
                        "description": "Max task's price",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": "500"
                        }
                    },
                    {
                        "name": "task_states",
                        "in": "query",
                        "description": "Task's current state",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "posted"
                        }
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Task's search term",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "task"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Task's order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "recent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return list of tasks"
                    }
                }
            },
            "post": {
                "tags": [
                    "Task"
                ],
                "summary": "Create a new task",
                "operationId": "App\\Http\\Controllers\\TaskController::store",
                "requestBody": {
                    "description": "Create data format",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Task's name",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Task's description",
                                        "type": "string"
                                    },
                                    "price": {
                                        "description": "Task's price",
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "deadline": {
                                        "description": "Task's deadline",
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "online_or_phone": {
                                        "description": "Task's mode",
                                        "type": "boolean"
                                    },
                                    "specified_times": {
                                        "description": "Task's specified times",
                                        "properties": {
                                            "morning": {
                                                "type": "boolean"
                                            },
                                            "midday": {
                                                "type": "boolean"
                                            },
                                            "afternoon": {
                                                "type": "boolean"
                                            },
                                            "evening": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "default_location": {
                                        "description": "Task's default location",
                                        "properties": {
                                            "display_name": {
                                                "type": "string"
                                            },
                                            "longtitude": {
                                                "type": "number",
                                                "format": "float"
                                            },
                                            "latitude": {
                                                "type": "number",
                                                "format": "float"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create a task successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/tasks/{slug}": {
            "get": {
                "tags": [
                    "Task"
                ],
                "summary": "Get a single task by slug",
                "operationId": "App\\Http\\Controllers\\TaskController::show",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return a single task by slug"
                    }
                }
            }
        },
        "/users/avatar": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Upload current user's avatar",
                "operationId": "App\\Http\\Controllers\\UserAvatarController::store",
                "requestBody": {
                    "required": true,
                    "content": {
                        "image/jpeg": {
                            "schema": {
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "avatar": {
                                        "description": "avatar file to upload",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Return list of tasks"
                    }
                }
            }
        },
        "/users/{slug}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Find user by slug",
                "description": "Returns a single user",
                "operationId": "App\\Http\\Controllers\\UserController::show",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of user to return",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Slug supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get current user",
                "description": "Returns current user",
                "operationId": "App\\Http\\Controllers\\UserController::me",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "User not authenticated"
                    }
                }
            }
        }
    }
}